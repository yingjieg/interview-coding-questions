version: '3.8'

services:
  # PostgreSQL database
  db:
    image: postgres:16
    container_name: ticket-booking-db
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d demo" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot application
  app:
    build: .
    container_name: ticket-booking-app
    ports:
      - "8888:8888"
    environment:
      # Database configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/demo
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: mypassword

      # JPA configuration for local development
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_FORMAT_SQL: true

      # PayPal configuration (set these for local development)
      # PAYPAL_CLIENT_ID: your_paypal_client_id
      # PAYPAL_CLIENT_SECRET: your_paypal_client_secret
      # PAYPAL_MODE: sandbox

      # Application configuration
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_EXAMPLE: DEBUG
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge